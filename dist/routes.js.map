{"version":3,"sources":["../server/routes.js"],"names":["router","api","use","express","static","path","join","__dirname","upload","dest","passport","initialize","session","LocalStrategy","passportLocal","Strategy","Users","authenticate","serializeUser","deserializeUser","get","AuthMe","Logout","post","Register","Login","RedirectNoAuth","GetProducts","ChangePremium"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;AACA;;;;AAEA,IAAMA,SAAS,sBAAf;AACA,IAAMC,MAAM,sBAAZ;;AAEAD,OAAOE,GAAP,CAAWC,kBAAQC,MAAR,CAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,iBAArB,CAAf,CAAX;;AAGA,IAAIC,SAAS,sBAAO,EAAEC,MAAM,gBAAR,EAAP,CAAb;;AAEA;AACAT,OAAOE,GAAP,CAAWQ,mBAASC,UAAT,EAAX;AACAX,OAAOE,GAAP,CAAWQ,mBAASE,OAAT,EAAX;;AAGA,IAAMC,gBAAgBC,wBAAcC,QAApC;AACAL,mBAASR,GAAT,CAAa,IAAIW,aAAJ,CAAkBG,gBAAMC,YAAN,EAAlB,CAAb;AACAP,mBAASQ,aAAT,CAAuBF,gBAAME,aAAN,EAAvB;AACAR,mBAASS,eAAT,CAAyBH,gBAAMG,eAAN,EAAzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEAnB,OAAOE,GAAP,CAAW,MAAX,EAAmBD,GAAnB;;AAEAA,IAAImB,GAAJ,CAAQ,KAAR,EAAeC,YAAf;AACApB,IAAImB,GAAJ,CAAQ,cAAR,EAAwBE,YAAxB;AACArB,IAAIsB,IAAJ,CAAS,gBAAT,EAA2BC,cAA3B;AACAvB,IAAIsB,IAAJ,CAAS,aAAT,EAAwBb,mBAASO,YAAT,CAAsB,OAAtB,CAAxB,EAAwDQ,WAAxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAxB,IAAIC,GAAJ,CAAQwB,oBAAR;;AAEAzB,IAAIsB,IAAJ,CAAS,kBAAT,EAA6BI,gBAA7B;AACA1B,IAAIsB,IAAJ,CAAS,gBAAT,EAA2BK,kBAA3B;;kBAEe5B,M","file":"routes.js","sourcesContent":["import express, { Router } from \"express\";\nimport path from \"path\";\nimport passport from \"passport\";\nimport passportLocal from \"passport-local\";\nimport multer from \"multer\";\nimport cfg from \"./controllers/config\";\nimport jwt from \"jsonwebtoken\";\nimport Users from \"./models/Users\";\n\nimport { Register, Logout, Login, AuthMe, RedirectNoAuth} from \"./controllers/auth\";\nimport { GetProducts, ChangePremium, } from \"./controllers/api\";\n\nconst router = Router();\nconst api = Router();\n\nrouter.use(express.static(path.join(__dirname, \"../client/build\")));\n\n\nvar upload = multer({ dest: \"./public/logos\" });\n\n// PassportJS Setup\nrouter.use(passport.initialize());\nrouter.use(passport.session())\n\n\nconst LocalStrategy = passportLocal.Strategy;\npassport.use(new LocalStrategy(Users.authenticate()));\npassport.serializeUser(Users.serializeUser())\npassport.deserializeUser(Users.deserializeUser())\n\n// passport.use(\n//   new JWTStrategy(\n//     {\n//       jwtFromRequest: ExtractJWT.fromAuthHeaderAsBearerToken(),\n//       secretOrKey: cfg.jwtSecret\n//     },\n//     function(jwtPayload, cb) {\n//       //find the user in db if needed. This functionality may be omitted if you store everything you'll need in JWT payload.\n//       return Users.findOne(jwtPayload.id)\n//         .then(user => {\n//           return cb(null, user);\n//         })\n//         .catch(err => {\n//           return cb(err);\n//         });\n//     }\n//   )\n// );\n\n//image upload temporary function\n\nrouter.use(\"/api\", api);\n\napi.get(\"/me\", AuthMe);\napi.get(\"/auth/logout\", Logout);\napi.post(\"/auth/register\", Register);\napi.post('/auth/login', passport.authenticate('local'), Login)\n// api.post(\"/auth/login\", function(req, res, next) {\n//   passport.authenticate(\"local\", { session: false }, (err, user, info) => {\n//     if (err || !user) {\n//       console.log(user);\n//       return res.status(400).json({\n//         message: \"Something is not right\",\n//         user: user\n//       });\n//     }\n//     req.login(user, { session: false }, err => {\n//       if (err) {\n//         res.send(err);\n//       }\n//       // generate a signed son web token with the contents of user object and return it in the response\n//       const token = jwt.sign(user.toJSON(), cfg.jwtSecret);\n//       console.log(\"Logged In!!!\");\n//       return res.json({\n//         user: {\n//           ...user,\n//           salt: undefined,\n//           hash: undefined\n//         },\n//         token\n//       });\n//     });\n//   })(req, res);\n// });\napi.use(RedirectNoAuth)\n\napi.post('/getProducts/:id', GetProducts);\napi.post('/changePremium', ChangePremium);\n\nexport default router;\n"]}