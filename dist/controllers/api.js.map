{"version":3,"sources":["../../server/controllers/api.js"],"names":["ChangePremium","req","res","id","body","_id","premium","Products","findOneAndUpdate","$set","new","then","json","data","catch","status","message","err","CreateProduct","result","url","public_id","user","JSON","parse","title","state","localGovtArea","price","negotiable","productDetails","product","picName","Product","create","username","sid","console","log","GetProducts","page","parseInt","Number","params","searchKey","searchQuery","search","$regex","$options","$or","Promise","all","find","count","sort","skip","limit","products","Users","$in","map","userName","filter","_doc","phoneNumber","error","DeleteProduct","findOneAndRemove","MyAds","GetSummary","oneday","$lt","Date","now","toString","created","availableProducts","lastWeekCount","usersCount","myAdsCount"],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;AAGO,IAAMA,wCAAgB,SAAhBA,aAAgB,CAACC,GAAD,EAAMC,GAAN,EAAc;AACzC,MAAIC,KAAKF,IAAIG,IAAJ,CAASC,GAAlB;AACA,MAAIC,UAAUL,IAAIG,IAAlB;AACAG,qBAASC,gBAAT,CACE;AACEH,SAAKF;AADP,GADF,EAIE;AACEM,UAAM;AACJH,eAAS,CAACA,QAAQA;AADd;AADR,GAJF,EASE;AACEI,SAAK;AADP,GATF,EAaGC,IAbH,CAaQ;AAAA,WAAQT,IAAIU,IAAJ,CAASC,IAAT,CAAR;AAAA,GAbR,EAcGC,KAdH,CAcS;AAAA,WACLZ,IAAIa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACnBI,eAASC,IAAID;AADM,KAArB,CADK;AAAA,GAdT;AAmBD,CAtBM;;AAwBA,IAAME,wCAAgB,SAAhBA,aAAgB,CAACjB,GAAD,EAAMC,GAAN,EAAWiB,MAAX,EAAsB;AAAA,MACzCC,GADyC,GACtBD,MADsB,CACzCC,GADyC;AAAA,MACpCC,SADoC,GACtBF,MADsB,CACpCE,SADoC;;AAEjD,MAAMC,OAAOrB,IAAIqB,IAAjB;;AAFiD,oBAGUC,KAAKC,KAAL,CACzDvB,IAAIG,IAAJ,CAASS,IADgD,CAHV;AAAA,MAGzCY,KAHyC,eAGzCA,KAHyC;AAAA,MAGlCC,KAHkC,eAGlCA,KAHkC;AAAA,MAG3BC,aAH2B,eAG3BA,aAH2B;AAAA,MAGZC,KAHY,eAGZA,KAHY;AAAA,MAGLC,UAHK,eAGLA,UAHK;;AAMjD,MAAMC,iBAAiB;AACrBL,gBADqB;AAErBC,gBAFqB;AAGrBC,gCAHqB;AAIrBC,gBAJqB;AAKrBC,0BALqB;AAMrBE,aAASX,GANY;AAOrBY,aAASX;AAPY,GAAvB;AASAY,qBAAQC,MAAR,cAAoBJ,cAApB,IAAoCK,UAAUb,KAAKc,GAAnD,KACGzB,IADH,CACQ;AAAA,WAAQT,IAAIU,IAAJ,CAASC,IAAT,CAAR;AAAA,GADR,EAEGC,KAFH,CAES,eAAO;AACZuB,YAAQC,GAAR,CAAYrB,GAAZ;AACAf,QAAIa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,EAAEK,KAAKA,GAAP,EAAYD,SAASC,IAAID,OAAzB,EAArB;AACD,GALH;AAMD,CArBM;;AAuBA,IAAMuB;AAAA,+EAAc,iBAAOtC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACrBsC,gBADqB,GACdC,SAASC,OAAOzC,IAAI0C,MAAJ,CAAWxC,EAAlB,CAAT,CADc;AAErByC,qBAFqB,GAET3C,IAAIG,IAAJ,CAASwC,SAFA;AAGrBC,uBAHqB,GAGP,EAHO;;AAIzB,gBAAID,SAAJ,EAAe;AACTE,oBADS,GACA;AACXC,wBAAQH,aAAa,EADV;AAEXI,0BAAU;AAFC,eADA;;AAKbH,4BAAc;AACZI,qBAAK,CACH;AACEb,uBAAKU;AADP,iBADG,EAIH;AACEf,2BAASe;AADX,iBAJG,EAOH;AACEpB,yBAAOoB;AADT,iBAPG,EAUH;AACEnB,iCAAemB;AADjB,iBAVG,EAaH;AACErB,yBAAOqB;AADT,iBAbG;AADO,eAAd;AAmBD;AACD,gBAAI,CAACN,IAAL,EAAW;AACTA,qBAAO,CAAP;AACD;AA/BwB;AAAA;AAAA,mBAiCOU,QAAQC,GAAR,CAAY,CACxClB,mBAAQmB,IAAR,CAAaP,WAAb,EAA0BQ,KAA1B,EADwC,EAExCpB,mBAAQmB,IAAR,CAAaP,WAAb,EACGS,IADH,CACQ,SADR,EAEGC,IAFH,CAEQf,OAAO,EAAP,GAAY,EAFpB,EAGGgB,KAHH,CAGS,EAHT,CAFwC,CAAZ,CAjCP;;AAAA;AAAA;AAAA;AAiClBH,iBAjCkB;AAiCXI,oBAjCW;AAAA;AAAA,mBAwCFC,gBAAMN,IAAN,CACnB;AACEhB,mBAAK;AACHuB,qBAAKF,SAASG,GAAT,CAAa;AAAA,yBAAW7B,QAAQI,QAAnB;AAAA,iBAAb;AADF;AADP,aADmB,EAMnB,0BANmB,CAxCE;;AAAA;AAwCnBA,oBAxCmB;;AAgDvBsB,uBAAWA,SAASG,GAAT,CAAa,mBAAW;AACjC,kBAAIC,WAAW1B,SAAS2B,MAAT,CAAgB;AAAA,uBAAQxC,KAAKc,GAAL,KAAaL,QAAQI,QAA7B;AAAA,eAAhB,EAAuD,CAAvD,CAAf;AACAJ,sBAAQgC,IAAR,CAAa5B,QAAb,GAAwB0B,WAAWA,SAAS1B,QAApB,GAA+B,EAAvD;AACAJ,sBAAQgC,IAAR,CAAaC,WAAb,GAA2BH,WAAWA,SAASG,WAApB,GAAkC,EAA7D;AACA,qBAAOjC,OAAP;AACD,aALU,CAAX;;AAhDuB,6CAuDhB7B,IAAIU,IAAJ,CAAS;AACdyC,0BADc;AAEdI;AAFc,aAAT,CAvDgB;;AAAA;AAAA;AAAA;;AA4DvBpB,oBAAQC,GAAR;AACApC,gBAAIa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACnBI,uBAAS,4BADU;AAEnBiD,qBAAO,YAAIjD;AAFQ,aAArB;;AA7DuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAoEA,IAAMkD,wCAAgB,SAAhBA,aAAgB,CAACjE,GAAD,EAAMC,GAAN,EAAWiB,MAAX,EAAsB;AACjDkB,UAAQC,GAAR,CAAYnB,MAAZ;AACA,MAAId,MAAMJ,IAAI0C,MAAJ,CAAWxC,EAArB;AACAI,qBAAS4D,gBAAT,CAA0B,EAAE9D,QAAF,EAA1B,EACGM,IADH,CACQ;AAAA,WACJT,IAAIU,IAAJ,CAAS;AACPI,eAAS;AADF,KAAT,CADI;AAAA,GADR,EAMGF,KANH,CAMS,eAAO;AACZZ,QAAIa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACnBI,eAAS,0BADU;AAEnBiD,aAAOhD,IAAID;AAFQ,KAArB;AAID,GAXH;AAYD,CAfM;;AAiBA,IAAMoD;AAAA,gFAAQ,kBAAOnE,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACfsC,gBADe,GACRC,SAASC,OAAOzC,IAAI0C,MAAJ,CAAWxC,EAAlB,CAAT,CADQ;AAEfyC,qBAFe,GAEH3C,IAAIG,IAAJ,CAASwC,SAFN;AAGfR,eAHe,GAGTnC,IAAIqB,IAAJ,CAASc,GAHA;AAIfS,uBAJe,GAID,EAAEV,UAAUC,GAAZ,EAJC;;AAKnB,gBAAIQ,SAAJ,EAAe;AACTE,oBADS,GACA;AACXC,wBAAQH,aAAa,EADV;AAEXI,0BAAU;AAFC,eADA;;AAKbH,0BAAYI,GAAZ,GAAkB,CAChB;AACEb,qBAAKU;AADP,eADgB,EAIhB;AACEf,yBAASe;AADX,eAJgB,EAOhB;AACEpB,uBAAOoB;AADT,eAPgB,EAUhB;AACEnB,+BAAemB;AADjB,eAVgB,EAahB;AACErB,uBAAOqB;AADT,eAbgB,CAAlB;AAiBD;;AAED,gBAAI,CAACN,IAAL,EAAW;AACTA,qBAAO,CAAP;AACD;AA/BkB;AAAA;AAAA,mBAiCaU,QAAQC,GAAR,CAAY,CACxClB,mBAAQmB,IAAR,CAAaP,WAAb,EAA0BQ,KAA1B,EADwC,EAExCpB,mBAAQmB,IAAR,CAAaP,WAAb,EACGS,IADH,CACQ,SADR,CAFwC,CAAZ,CAjCb;;AAAA;AAAA;AAAA;AAiCZD,iBAjCY;AAiCLI,oBAjCK;AAAA;AAAA,mBAsCIC,gBAAMN,IAAN,CACnB;AACEhB,mBAAK;AACHuB,qBAAKF,SAASG,GAAT,CAAa;AAAA,yBAAW7B,QAAQI,QAAnB;AAAA,iBAAb;AADF;AADP,aADmB,EAMnB,0BANmB,CAtCJ;;AAAA;AAsCbA,oBAtCa;;AA8CjBsB,uBAAWA,SAASG,GAAT,CAAa,mBAAW;AACjC,kBAAIC,WAAW1B,SAAS2B,MAAT,CAAgB;AAAA,uBAAQxC,KAAKc,GAAL,KAAaL,QAAQI,QAA7B;AAAA,eAAhB,EAAuD,CAAvD,CAAf;AACAJ,sBAAQgC,IAAR,CAAa5B,QAAb,GAAwB0B,WAAWA,SAAS1B,QAApB,GAA+B,EAAvD;AACAJ,sBAAQgC,IAAR,CAAaC,WAAb,GAA2BH,WAAWA,SAASG,WAApB,GAAkC,EAA7D;AACA,qBAAOjC,OAAP;AACD,aALU,CAAX;;AA9CiB,8CAqDV7B,IAAIU,IAAJ,CAAS;AACdyC,0BADc;AAEdI;AAFc,aAAT,CArDU;;AAAA;AAAA;AAAA;;AA0DjBpB,oBAAQC,GAAR;AACApC,gBAAIa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACnBI,uBAAS,4BADU;AAEnBiD,qBAAO,aAAIjD;AAFQ,aAArB;;AA3DiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAR;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAkEA,IAAMqD;AAAA,gFAAa,kBAAQpE,GAAR,EAAaC,GAAb;AAAA;;AAAA;AAAA;AAAA;AAAA;AACpBoE,kBADoB,GACX,MADW;AAEpBxB,kBAFoB,GAEX;AACXyB,mBAAM,IAAIC,IAAJ,CAASA,KAAKC,GAAL,KAAa,IAAIH,MAA1B,CAAD,CAAoCI,QAApC;AADM,aAFW;AAAA;AAAA;AAAA,mBAMmDxB,QAAQC,GAAR,CAAY,CACnFlB,mBAAQmB,IAAR,GAAeC,KAAf,EADmF,EAEnFpB,mBAAQmB,IAAR,CAAa,EAACuB,SAAS7B,MAAV,EAAb,EAAgCO,KAAhC,EAFmF,EAGnFK,gBAAMN,IAAN,GAAaC,KAAb,EAHmF,EAInFpB,mBAAQmB,IAAR,CAAa,EAAEjB,UAAUlC,IAAIqB,IAAJ,CAASc,GAArB,EAAb,EAAyCiB,KAAzC,EAJmF,CAAZ,CANnD;;AAAA;AAAA;AAAA;AAMhBuB,6BANgB;AAMGC,yBANH;AAMkBC,sBANlB;AAM8BC,sBAN9B;AAAA,8CAYf7E,IAAIU,IAAJ,CAAS;AACdgE,kDADc,EACKC,4BADL,EACoBC,sBADpB,EACgCC;AADhC,aAAT,CAZe;;AAAA;AAAA;AAAA;;AAgBtB1C,oBAAQC,GAAR;AACApC,gBAAIa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACnBI,uBAAS,4BADU;AAEnBiD,qBAAO,aAAIjD;AAFQ,aAArB;;AAjBsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAAA;AAAA;AAAA;AAAA,GAAN","file":"api.js","sourcesContent":["import regeneratorRuntime from \"regenerator-runtime\";\nimport Product from \"../models/Products\";\nimport Users from \"../models/Users\";\nimport Products from \"../models/Products\";\n\nexport const ChangePremium = (req, res) => {\n  let id = req.body._id;\n  let premium = req.body;\n  Products.findOneAndUpdate(\n    {\n      _id: id\n    },\n    {\n      $set: {\n        premium: !premium.premium\n      }\n    },\n    {\n      new: true\n    }\n  )\n    .then(data => res.json(data))\n    .catch(err =>\n      res.status(500).json({\n        message: err.message\n      })\n    );\n};\n\nexport const CreateProduct = (req, res, result) => {\n  const { url, public_id } = result;\n  const user = req.user;\n  const { title, state, localGovtArea, price, negotiable } = JSON.parse(\n    req.body.data\n  );\n  const productDetails = {\n    title,\n    state,\n    localGovtArea,\n    price,\n    negotiable,\n    product: url,\n    picName: public_id\n  };\n  Product.create({ ...productDetails, username: user.sid })\n    .then(data => res.json(data))\n    .catch(err => {\n      console.log(err);\n      res.status(500).json({ err: err, message: err.message });\n    });\n};\n\nexport const GetProducts = async (req, res) => {\n  let page = parseInt(Number(req.params.id));\n  let searchKey = req.body.searchKey;\n  let searchQuery = {};\n  if (searchKey) {\n    let search = {\n      $regex: searchKey || \"\",\n      $options: \"i\"\n    };\n    searchQuery = {\n      $or: [\n        {\n          sid: search\n        },\n        {\n          product: search\n        },\n        {\n          state: search\n        },\n        {\n          localGovtArea: search\n        },\n        {\n          title: search\n        }\n      ]\n    };\n  }\n  if (!page) {\n    page = 1;\n  }\n  try {\n    let [count, products] = await Promise.all([\n      Product.find(searchQuery).count(),\n      Product.find(searchQuery)\n        .sort(\"created\")\n        .skip(page * 25 - 25)\n        .limit(25)\n    ]);\n    let username = await Users.find(\n      {\n        sid: {\n          $in: products.map(product => product.username)\n        }\n      },\n      \"username phoneNumber sid\"\n    );\n    products = products.map(product => {\n      let userName = username.filter(user => user.sid === product.username)[0];\n      product._doc.username = userName ? userName.username : \"\";\n      product._doc.phoneNumber = userName ? userName.phoneNumber : \"\";\n      return product;\n    });\n\n    return res.json({\n      count,\n      products\n    });\n  } catch (err) {\n    console.log(err);\n    res.status(500).json({\n      message: \"Error Loading Product List\",\n      error: err.message\n    });\n  }\n};\n\nexport const DeleteProduct = (req, res, result) => {\n  console.log(result);\n  let _id = req.params.id;\n  Products.findOneAndRemove({ _id })\n    .then(data =>\n      res.json({\n        message: \"Deleted Successfully\"\n      })\n    )\n    .catch(err => {\n      res.status(500).json({\n        message: \"Unable to delete Product\",\n        error: err.message\n      });\n    });\n};\n\nexport const MyAds = async (req, res) => {\n  let page = parseInt(Number(req.params.id));\n  let searchKey = req.body.searchKey;\n  let sid = req.user.sid;\n  let searchQuery = { username: sid };\n  if (searchKey) {\n    let search = {\n      $regex: searchKey || \"\",\n      $options: \"i\"\n    };\n    searchQuery.$or = [\n      {\n        sid: search\n      },\n      {\n        product: search\n      },\n      {\n        state: search\n      },\n      {\n        localGovtArea: search\n      },\n      {\n        title: search\n      }\n    ];\n  }\n\n  if (!page) {\n    page = 1;\n  }\n  try {\n    let [count, products] = await Promise.all([\n      Product.find(searchQuery).count(),\n      Product.find(searchQuery)\n        .sort(\"created\")\n    ]);\n    let username = await Users.find(\n      {\n        sid: {\n          $in: products.map(product => product.username)\n        }\n      },\n      \"username phoneNumber sid\"\n    );\n    products = products.map(product => {\n      let userName = username.filter(user => user.sid === product.username)[0];\n      product._doc.username = userName ? userName.username : \"\";\n      product._doc.phoneNumber = userName ? userName.phoneNumber : \"\";\n      return product;\n    });\n\n    return res.json({\n      count,\n      products\n    });\n  } catch (err) {\n    console.log(err);\n    res.status(500).json({\n      message: \"Error Loading Product List\",\n      error: err.message\n    });\n  }\n};\n\nexport const GetSummary = async ( req, res) => {\n  let oneday = 8.64e7\n  let search = {\n    $lt: (new Date(Date.now() - 7 * oneday)).toString()\n  }\n  try {\n    let [ availableProducts, lastWeekCount, usersCount, myAdsCount ] = await Promise.all([\n      Product.find().count(),\n      Product.find({created: search}).count(),\n      Users.find().count(),\n      Product.find({ username: req.user.sid }).count()\n    ])\n    return res.json({\n      availableProducts, lastWeekCount, usersCount, myAdsCount\n    })\n  } catch (err) {\n    console.log(err)\n    res.status(500).json({\n      message: \"Error Getting Summary Data\",\n      error: err.message\n    });\n  }\n}\n"]}